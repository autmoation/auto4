name: Manage Submodules

on:
  workflow_dispatch:  # This trigger allows for manual execution

jobs:
  manage_submodules:
    runs-on: ubuntu-latest  # Runs on the latest Ubuntu runner
    
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Clone repository and add initial submodule
      run: |
        git clone "https://github.com/user/test4.git"
        git submodule add "https://github.com/auto-testing-e/test3.git"
        git submodule update --init --recursive
        git add .
        git commit -m "Added submodules"
        git push origin main

    - name: Display menu and execute based on input
      run: |
        echo "Select an action:"
        echo "1. Initialize a specific submodule"
        echo "2. Update a specific submodule to the latest commit"
        echo "3. Commit and push updates for a specific submodule"
        echo "4. Sync a specific submodule's URL"
        echo "5. Remove a specific submodule"
        echo "6. Re-add a submodule"
        echo "7. Exit"
        
        read -p "Enter the number corresponding to your choice: " action
        case $action in
          1)
            read -p "Enter the path of the submodule to initialize: " initializePath
            git submodule update --init --recursive $initializePath
            echo "$initializePath submodule has been initialized."
            ;;
          2)
            read -p "Enter the path of the submodule to update: " updatePath
            git submodule update --remote $updatePath
            echo "$updatePath submodule has been updated to the latest commit."
            ;;
          3)
            read -p "Enter the path of the submodule to commit and push: " commitPath
            git add $commitPath
            git commit -m "Update specific submodule: $commitPath"
            git push origin main
            echo "Updates for $commitPath submodule have been committed and pushed."
            ;;
          4)
            read -p "Enter the path of the submodule to sync: " syncPath
            git submodule sync --recursive $syncPath
            echo "$syncPath submodule URL has been synced."
            ;;
          5)
            read -p "Enter the path of the submodule to remove: " removePath
            git submodule deinit $removePath
            git rm -r --cached $removePath
            echo "$removePath submodule has been removed."
            ;;
          6)
            read -p "Enter the submodule repository URL to add (e.g., 'https://github.com/company/repo.git'): " reAddUrl
            read -p "Enter the directory path for the submodule (e.g., 'submodules/repo1'): " reAddPath
            git submodule add $reAddUrl $reAddPath
            git commit -m "Re-added submodule at $reAddPath"
            echo "Submodule added at $reAddPath."
            ;;
          7)
            echo "Exiting the script."
            ;;
          *)
            echo "Invalid selection. Please enter a number between 1 and 7."
            ;;
        esac


