# SPDX-License-Identifier: Apache-2.0
# Copyright 2024 Jeena's Team

name: Submodule Management Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Trigger manually from the GitHub UI

jobs:
  manage_submodules:
    runs-on: ubuntu-latest  # Use a Linux runner; change to windows-latest if needed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # Checkout the code to the runner

    - name: Set up Git
      run: |
        git config --global user.name "Your Name"
        git config --global user.email "your-email@example.com"
    
    - name: Add a submodule
      run: |
        echo "Enter the URL of the submodule to add "
        read submoduleUrl
        git submodule add $submoduleUrl
        git submodule update --init --recursive
        git add .
        git commit -m "Added submodule: $submoduleUrl"
        git push origin main

    - name: Initialize a specific submodule
      run: |
        echo "Enter the path of the submodule to initialize"
        read initializePath
        git submodule update --init --recursive $initializePath
        echo "$initializePath submodule has been initialized."
    
    - name: Update a specific submodule
      run: |
        echo "Enter the path of the submodule to update"
        read updatePath
        git submodule update --remote $updatePath
        echo "$updatePath submodule has been updated to the latest commit."

    - name: Commit and push updates for a specific submodule
      run: |
        echo "Enter the path of the submodule to commit and push"
        read commitPath
        git add $commitPath
        git commit -m "Update specific submodule: $commitPath"
        git push origin main
        echo "Updates for $commitPath submodule have been committed and pushed."

    - name: Sync a specific submodule's URL
      run: |
        echo "Enter the path of the submodule to sync"
        read syncPath
        git submodule sync --recursive $syncPath
        echo "$syncPath submodule URL has been synced."

    - name: Remove a specific submodule
      run: |
        echo "Enter the path of the submodule to remove"
        read removePath
        git submodule deinit $removePath
        git rm -r --cached $removePath
        echo "$removePath submodule has been removed."

    - name: Re-add a submodule
      run: |
        echo "Enter the submodule repository URL to add"
        read reAddUrl
        echo "Enter the directory path for the submodule"
        read reAddPath
        git submodule add $reAddUrl $reAddPath
        git commit -m "Re-added submodule at $reAddPath"
        echo "Submodule added at $reAddPath."

    - name: Exit the workflow
      run: echo "Exiting the script."
